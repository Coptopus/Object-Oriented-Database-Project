package odb_test;

import java.util.*;
import javax.persistence.*;

public class DatabaseOperations {
	
	public static void addStudent(Student s) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
		EntityManager em = emf.createEntityManager();
		
		em.getTransaction().begin();
		em.persist(s);
		em.getTransaction().commit();
		
		em.close();
		emf.close();
	}
	
	public static void addCourse(Course c) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
		EntityManager em = emf.createEntityManager();
		
		em.getTransaction().begin();
		em.persist(c);
		em.getTransaction().commit();
		
		em.close();
		emf.close();
	}
	
	public static void addEnrollment(Enrollment e) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
		EntityManager em = emf.createEntityManager();
		
		em.getTransaction().begin();
		em.persist(e);
		em.getTransaction().commit();
		
		em.close();
		emf.close();
	}
	
	public static List<Student> getAllStudents() {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
	    EntityManager em = emf.createEntityManager();
	    
	    List<Student> students = em.createQuery("SELECT s FROM Student s", Student.class).getResultList();
	    
	    em.close();
	    emf.close();
	    return students;
	}
	
	public static List<Course> getAllCourses() {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
	    EntityManager em = emf.createEntityManager();
	    
	    List<Course> courses = em.createQuery("SELECT c FROM Course c", Course.class).getResultList();
	    
	    em.close();
	    emf.close();
	    return courses;
	}
	
	public static List<Enrollment> getAllEnrollments() {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
	    EntityManager em = emf.createEntityManager();
	    
	    List<Enrollment> enrollments = em.createQuery("SELECT e FROM Enrollment e", Enrollment.class).getResultList();
	    
	    em.close();
	    emf.close();
	    return enrollments;
	}
	
	public static Student getStudentById(int id) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
	    EntityManager em = emf.createEntityManager();
	    
	    Student s = em.find(Student.class, id);
	    
	    em.close();
	    emf.close();
	    return s;
	}

	public static Course getCourseById(int id) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
	    EntityManager em = emf.createEntityManager();
	    
	    Course c = em.find(Course.class, id);
	    
	    em.close();
	    emf.close();
	    return c;
	}

	public static Enrollment geEnrollmentById(int id) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("$objectdb/db/odbtest.odb");
	    EntityManager em = emf.createEntityManager();
	    
	    Enrollment e = em.find(Enrollment.class, id);
	    
	    em.close();
	    emf.close();
	    return e;
	}

}
